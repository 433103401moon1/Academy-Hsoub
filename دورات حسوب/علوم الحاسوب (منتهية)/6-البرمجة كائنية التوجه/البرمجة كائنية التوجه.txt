- البرمجة كائنية التوجة تاتي لحل مشكلة البرمجة الاجرائية في حال كبر حجم العمل فسيكون الامر معقدا جدا التعامل مع كل الاجراءات بالشكل العادي
- اي شي يمتلك خصائص يعتبر كائن حتى لو كان غير ملموس
- التوابع في البرمجة كائنية التوجة اي الانشطة التي يمكن عملها على الكائن مثل البنك ايداع الاموال حساب المصروفات الخ
- افضل بداية للتعرف على الكائنات في بايثون :   https://academy.hsoub.com/courses/computer-science/oop/oop/04-%D8%AA%D8%B9%D8%B1%D9%8A%D9%81-%D8%A7%D9%84%D8%A3%D8%B5%D9%86%D8%A7%D9%81-%D9%88%D8%A7%D9%84%D9%83%D8%A7%D8%A6%D9%86%D8%A7%D8%AA-declaring-classes-and-objects-r3424/


في بايثون، العبارة "if name == 'main':" تستخدم للتحقق مما إذا كان الملف يتم تشغيله كبرنامج مستقل أم لا. عندما يتم تشغيل ملف بايثون مباشرةً، يتم تعيين القيمة "main" للمتغير المدمج "name". وبالتالي، إذا كانت العبارة "if name == 'main':" صحيحة، فهذا يعني أن الملف يتم تشغيله كبرنامج مستقل.
يُستخدم هذا النمط الشائع في البرامج البايثونية للتحكم في تنفيذ الشيفرة التي تكون في الجزء العلوي من الملف عند تشغيله كبرنامج مستقل. عند استيراد الملف كوحدة في برنامج آخر، لن يتم تنفيذ الشيفرة الواقعة داخل الجزء الذي يأتي ضمن العبارة "if name == 'main':"، بل ستكون متاحة للاستخدام كأجزاء من الوحدة المستوردة.
وجود العبارة "if name == 'main':" يسمح لك بتنفيذ شيفرة اختبارية أو شيفرة التهيئة الأولية أو تصحيحات أخطاء في الملف عند تشغيله كبرنامج مستقل، دون أن يتأثر برنامج آخر يقوم بالاستيراد منه.


الدوال التي تبدأ وتنتهي بشرطة سفلية (underscore) معروفة باسم "الدوال السحرية" أو "الدوال الخاصة" (Magic Methods أو Special Methods) في لغة البرمجة بايثون. تُستخدم هذه الدوال لتعريف سلوك خاص للصنف بناءً على العمليات المعتادة في اللغة.
في الأمثلة السابقة:
"init()" هو دالة سحرية تُستخدم كمُنشئ للكائن.
"str()" هو دالة سحرية تُستخدم لتمثيل الكائن كسلسلة نصية.
"len()" هو دالة سحرية تُستخدم لتحديد طول الكائن.
"getitem()" هو دالة سحرية تُستخدم للوصول إلى العناصر في الكائن باستخدام الفهرس.
وهناك العديد من الدوال السحرية الأخرى مثل "add()" و"sub()" و"eq()" وغيرها. تُستخدم هذه الدوال لتعريف سلوك مخصص للعمليات الرياضية والمقارنات وغيرها في الصنف.

الدوال السحرية تُساعد في توفير مرونة وقوة في برمجة الصنف وتمكينه من التفاعل بشكل مميز مع عمليات اللغة الأساسية في بايثون.